{  
  "title": "用最简单的方案解决问题",
  "content": "<p>我在接受 <a href=\"http://teahour.fm/2013/04/08/interview-with-rei-about-writingsio.html\">teafhour.fm 的访谈</a>的时候聊到一点，就是我偏向于用简单的方案解决问题，而不是用技术性的方案。录制中我举了一个自动保存功能的例子，现在想再展开说一下这个观点。</p><p>我这个想法的形成，源自《Rework》的一节文章：刚刚好就是真的好。节选一部分内容如下：</p><blockquote> <p>很多人沉迷于用复杂的方法去解决问题。</p> <p>更好的做法是：找一个四两拨千金的解决方案，以最小的投入获得最大的产出。</p> <p>要想以小博大，其中的重要一点就是要认识到任何问题都是可以变通的。比如说，你目前要解决的问题是鸟瞰人间。其中一个办法是爬上珠穆朗玛峰。这个解决方案相当”彪悍“。不过还有另外一个办法，就是乘坐电梯到一栋大厦的屋顶去看，这就是一个柔道式的解决方案。</p> <p>……你只要找个办法把问题解决就行了，赶紧去办下一件事去。</p> <p>当找到合适的解决办法后，就用它了。总比浪费资源、甚至因为无法承担复杂的解决方案而在那干等要强。记住，以后你随时都可以把“刚刚好”变成“特别棒”。</p> </blockquote><p>我看完这节之后犹如当头棒喝。有很多成语、文章、心灵鸡汤告诉我们，不要畏难，要迎难而上，坚持就会胜利。但是很少有人提醒我们，面对一个问题，绕开它也是一个很好的方案。</p><h2>看清自己真正的问题</h2><p>还是以自动保存为例。一考虑到自动保存，就会有很多问题冒出来：如何减少网络流量、如何减少系统消耗、保存间隔多少适宜……等等，这些都不是真正的问题，真正的问题是什么：<b>如果让用户不必关心保存操作</b>。</p><p>只要能解决真正的问题，其他问题都是可以以后再考虑的。所以我用了最简单粗暴的方案，用户的每次输入都将完整正文 PUT 上服务器。</p><pre><code class=\"javascript\">editarea.on(<span class=\"string\">'editor:change'</span>, <span class=\"keyword\">function</span>() {\n  saveArticle(); \n}</code></pre><p>奥，完事了。加上处理浏览器兼容性和并发冲突的问题，一共用了一天时间就把这个功能搞定了，我可以继续开发下一个功能。</p><h2>等等，性能如何？</h2><p>我不能说我从来没有担心过性能问题，不过越来越多的实践让我觉得性能根本不是问题，或者说是个奢侈的问题。现在直接把服务器的状况打印出来看看：</p><pre><code class=\"ruby\"><span class=\"variable\">$ </span>rvmsudo passenger-status ----------- <span class=\"constant\">General</span> information ----------- max      = <span class=\"number\">12</span> count    = <span class=\"number\">10</span> active   = <span class=\"number\">0</span> inactive = <span class=\"number\">10</span> <span class=\"constant\">Waiting</span> on global queue<span class=\"symbol\">:</span> <span class=\"number\">0</span>  ----------- <span class=\"constant\">Application</span> groups ----------- <span class=\"regexp\">/home/</span>******<span class=\"regexp\">/writings.io/current</span><span class=\"symbol\">:</span>   <span class=\"constant\">App</span> root<span class=\"symbol\">:</span> /home/******<span class=\"regexp\">/writings.io/current</span>   * <span class=\"constant\">PID</span><span class=\"symbol\">:</span> <span class=\"number\">3039</span>    <span class=\"constant\">Sessions</span><span class=\"symbol\">:</span> <span class=\"number\">0</span>    <span class=\"constant\">Processed</span><span class=\"symbol\">:</span> <span class=\"number\">2531</span>    <span class=\"constant\">Uptime</span><span class=\"symbol\">:</span> <span class=\"number\">22</span>h <span class=\"number\">30</span>m <span class=\"number\">58</span>s   * <span class=\"constant\">PID</span><span class=\"symbol\">:</span> <span class=\"number\">2973</span>    <span class=\"constant\">Sessions</span><span class=\"symbol\">:</span> <span class=\"number\">0</span>    <span class=\"constant\">Processed</span><span class=\"symbol\">:</span> <span class=\"number\">225</span>     <span class=\"constant\">Uptime</span><span class=\"symbol\">:</span> <span class=\"number\">22</span>h <span class=\"number\">31</span>m <span class=\"number\">7</span>s   * <span class=\"constant\">PID</span><span class=\"symbol\">:</span> <span class=\"number\">3031</span>    <span class=\"constant\">Sessions</span><span class=\"symbol\">:</span> <span class=\"number\">0</span>    <span class=\"constant\">Processed</span><span class=\"symbol\">:</span> <span class=\"number\">1721</span>    <span class=\"constant\">Uptime</span><span class=\"symbol\">:</span> <span class=\"number\">22</span>h <span class=\"number\">30</span>m <span class=\"number\">58</span>s   * <span class=\"constant\">PID</span><span class=\"symbol\">:</span> <span class=\"number\">3049</span>    <span class=\"constant\">Sessions</span><span class=\"symbol\">:</span> <span class=\"number\">0</span>    <span class=\"constant\">Processed</span><span class=\"symbol\">:</span> <span class=\"number\">1381</span>    <span class=\"constant\">Uptime</span><span class=\"symbol\">:</span> <span class=\"number\">22</span>h <span class=\"number\">30</span>m <span class=\"number\">58</span>s   * <span class=\"constant\">PID</span><span class=\"symbol\">:</span> <span class=\"number\">2983</span>    <span class=\"constant\">Sessions</span><span class=\"symbol\">:</span> <span class=\"number\">0</span>    <span class=\"constant\">Processed</span><span class=\"symbol\">:</span> <span class=\"number\">2</span>       <span class=\"constant\">Uptime</span><span class=\"symbol\">:</span> <span class=\"number\">22</span>h <span class=\"number\">30</span>m <span class=\"number\">58</span>s   * <span class=\"constant\">PID</span><span class=\"symbol\">:</span> <span class=\"number\">3015</span>    <span class=\"constant\">Sessions</span><span class=\"symbol\">:</span> <span class=\"number\">0</span>    <span class=\"constant\">Processed</span><span class=\"symbol\">:</span> <span class=\"number\">2575</span>    <span class=\"constant\">Uptime</span><span class=\"symbol\">:</span> <span class=\"number\">22</span>h <span class=\"number\">30</span>m <span class=\"number\">58</span>s   * <span class=\"constant\">PID</span><span class=\"symbol\">:</span> <span class=\"number\">2991</span>    <span class=\"constant\">Sessions</span><span class=\"symbol\">:</span> <span class=\"number\">0</span>    <span class=\"constant\">Processed</span><span class=\"symbol\">:</span> <span class=\"number\">1244</span>    <span class=\"constant\">Uptime</span><span class=\"symbol\">:</span> <span class=\"number\">22</span>h <span class=\"number\">30</span>m <span class=\"number\">58</span>s   * <span class=\"constant\">PID</span><span class=\"symbol\">:</span> <span class=\"number\">2999</span>    <span class=\"constant\">Sessions</span><span class=\"symbol\">:</span> <span class=\"number\">0</span>    <span class=\"constant\">Processed</span><span class=\"symbol\">:</span> <span class=\"number\">2774</span>    <span class=\"constant\">Uptime</span><span class=\"symbol\">:</span> <span class=\"number\">22</span>h <span class=\"number\">30</span>m <span class=\"number\">58</span>s   * <span class=\"constant\">PID</span><span class=\"symbol\">:</span> <span class=\"number\">3007</span>    <span class=\"constant\">Sessions</span><span class=\"symbol\">:</span> <span class=\"number\">0</span>    <span class=\"constant\">Processed</span><span class=\"symbol\">:</span> <span class=\"number\">862</span>     <span class=\"constant\">Uptime</span><span class=\"symbol\">:</span> <span class=\"number\">22</span>h <span class=\"number\">30</span>m <span class=\"number\">58</span>s   * <span class=\"constant\">PID</span><span class=\"symbol\">:</span> <span class=\"number\">3023</span>    <span class=\"constant\">Sessions</span><span class=\"symbol\">:</span> <span class=\"number\">0</span>    <span class=\"constant\">Processed</span><span class=\"symbol\">:</span> <span class=\"number\">0</span>       <span class=\"constant\">Uptime</span><span class=\"symbol\">:</span> <span class=\"number\">22</span>h <span class=\"number\">30</span>m <span class=\"number\">58</span>s </code></pre><p>预想中的数据量大增、cpu 满载、带宽占满（该死的 Linode 现在有 2T 流量！）、系统崩溃、报警邮件、食欲下降、夜晚失眠……通通没有发生。这10个 Passenger 实例就这么空置在那里。<br></p><p>要分析为什么性能问题没有出现也很简单，首先，一次保存操作只需要几毫秒，服务器很快就处理完了；其次，网站规模很小，不会出现万人同时编辑的情况；最后，强调一遍，网站规模很小。</p><p>我什么时候才能被性能问题宠幸一回啊！如果出现性能问题我简直要开心死了，那说明活跃用户量上去了，那时候我肯定有资金增加服务器。<br></p><p>用户体验如何呢？现在为止，只有人抱怨不折叠设置栏情况下保存提示太烦人（将会优化），而没有人抱怨编辑器反映慢。很多人就是一个简单的评价：很棒。</p><h2>用户不关心你做了什么</h2><p>其实，如果我不把我的方案说出来，没有几个人会察觉到我用的方法有多么简单粗暴。普通用户知道的就是这个编辑器会随时保存，自己随时可以关闭浏览器标签。</p><p>用户最关心的，不是这个工具用了什么高科技，而是这个工具能不能解决问题。</p><p>不知道多少次，我做出一个自己觉得很牛X的功能之后，交给别人（包括技术人员）看，然后得出的反馈是：“看起来有点丑”。所以我不再热衷于牛X的技术方案，而是最实用的技术方案。不再告诉别人我的某个功能有多么高端，而是告诉别人这个工具可以解决什么问题。</p><p>更常见的情况是，开发人员自己把功能想复杂了。</p><p>我曾经处理过一个问答类功能，提问用户可以用虚拟积分悬赏，得到答案的时候可以赠送答题者积分。由于有效答案可能不止一个，所以可以给不同的答题者赠送不同的积分；又由于答题者可能会很多，所以又多了个平均给分；又为了避免提问者不结贴，又增加了阻止不结贴用户发新帖的机制……搞到最后不单止用户没搞明白结贴规则，连运营和开发人员都搞不懂，前后用了几周时间才搞通了。</p><p>如果可以重新设计这个功能，我就会给每个帖子加一个“感谢”按钮，这就完事了。</p><p>每次在考虑增加功能和机制的时候，问一下自己，用户关不关心这个？</p><h2>什么时候是例外</h2><p>有一种情况，却跟上面说到的情况相反，无论遇到多难的问题都要解决——如果这个地方是这个项目的核心竞争力。</p><p>以 writings.io 为例，编辑器就是其中一项核心。现在已经有很多开源的所见即所得编辑器，为什么我还要重写一个？因为现有的编辑器都不满足需求，就算基于一个已有编辑器二次开发，工作量都会很大，而&nbsp;writings.io 的很多设想都要依靠编辑器实现。</p><p>writings.io 前期开发花了三分之一时间在编辑器上。不得不说这是很有风险的，甚至可能导致项目夭折——编辑器无法完成或者效果比已有的编辑器差。但这次冒险成功了，编辑器成为 writings.io 的一个亮点，别人需要复制一个一样的编辑器，至少也要花上同样的人月，而我也不会站在原地不动。</p><p>如果某个功能就是项目的核心，没有别的更简单的方法实现同样的功能，而没有这个功能，整个项目就失去了意义，那么就尽情投入进去吧。</p>"
}